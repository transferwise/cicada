services:
  ### Primary container with Cicada
  cicada_dev:
    image: python:3.8-buster
    # image: python:3.10-buster
    container_name: cicada_dev
    working_dir: ${CICADA_HOME}
    entrypoint: ${CICADA_HOME}/local-dev/entrypoint.sh
    # entrypoint: ${CICADA_HOME}/local-dev/entrypoint-lite.sh
    environment:
      CICADA_HOME: ${CICADA_HOME}
      DB_POSTGRES_HOST: cicada_db
      DB_POSTGRES_PORT: ${DB_POSTGRES_PORT}
      DB_POSTGRES_PORT_ON_HOST: ${DB_POSTGRES_PORT_ON_HOST}
      DB_POSTGRES_USER: ${DB_POSTGRES_USER}
      DB_POSTGRES_PASS: ${DB_POSTGRES_PASS}
      DB_POSTGRES_DB: ${DB_POSTGRES_DB}

    volumes:
      - ../:${CICADA_HOME}
    depends_on:
      - cicada_db
    networks:
      - cicada_network

  # PostgreSQL database container used as backend
  cicada_db:
    build:
      context: ./cicada_db
      dockerfile: Dockerfile
    container_name: cicada_db
    volumes:
      - ./cicada_db/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
    command: >
      -c "wal_level=logical"
      -c "max_replication_slots=5"
      -c "max_wal_senders=5"
      -c "ssl=on"
      -c "ssl_cert_file=/var/lib/postgresql/server.crt"
      -c "ssl_key_file=/var/lib/postgresql/server.key"
      -c "hba_file=/var/lib/postgresql/pg_hba.conf"
    ports:
      - ${DB_POSTGRES_PORT_ON_HOST}:${DB_POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASS}
      POSTGRES_DB: ${DB_POSTGRES_DB}
    networks:
      - cicada_network

  # db_postgres_source:
  #   build:
  #     context: ./pg
  #     dockerfile: Dockerfile
  #   container_name: pipelinewise_dev_postgres_source
  #   volumes:
  #     - ./pg/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
  #   # Making some logical decoding and ssl adjustments
  #   command: >
  #     -c "wal_level=logical"
  #     -c "max_replication_slots=5"
  #     -c "max_wal_senders=5"
  #     -c "ssl=on"
  #     -c "ssl_cert_file=/var/lib/postgresql/server.crt"
  #     -c "ssl_key_file=/var/lib/postgresql/server.key"
  #     -c "hba_file=/var/lib/postgresql/pg_hba.conf"
  #   ports:
  #     - ${TAP_POSTGRES_PORT_ON_HOST}:${TAP_POSTGRES_PORT}
  #   environment:
  #     POSTGRES_USER: ${TAP_POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${TAP_POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${TAP_POSTGRES_DB}
  #   networks:
  #     - pipelinewise_network

networks:
  cicada_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.52.0/24
